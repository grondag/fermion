plugins {
	id "fabric-loom" version "0.2.5-SNAPSHOT"
	id "eclipse"
	id "maven-publish"
	id "com.github.breadmoirai.github-release" version "2.2.9"
	id "org.ajoberstar.grgit" version "3.1.1"
	id "com.matthewprenger.cursegradle" version "1.4.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

def ENV = System.getenv()

def version_tag = archivesBaseName.replaceAll('-', '_') + '_version'

if (grgit == null) {
	version = '99.0.0-nogit'
} else if (project.hasProperty(version_tag)) {
	if(grgit.status().isClean()) {
		version = project.getProperty(version_tag) + '.' + grgit.log().size() + '+' + project.minecraft_version
	} else {
		version = project.getProperty(version_tag) + '.' + (grgit.log().size() + 1) + '-snapshot+' + project.minecraft_version
	}
} else {
	version = '99.0.0-local'
}

minecraft {
	refmapName = archivesBaseName + "-refmap.json"
}

processResources {
	inputs.property "version", version
	
	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": version
	}
	
	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

eclipse {
	project {
		name = archivesBaseName
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

jar {
	from "LICENSE"
	manifest
	{
		attributes "Implementation-Title": project.archivesBaseName
		attributes "Implementation-Version": project.version
		attributes "Maven-Artifact": "${project.group}:${project.archivesBaseName}:${project.version}"
		attributes "Built-On-Minecraft": "${project.minecraft_version}"
		attributes "Built-On-Java": "${System.getProperty("java.vm.version")} (${System.getProperty("java.vm.vendor")})"
	}
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
	manifest
	{
		attributes "Implementation-Title": project.archivesBaseName + "-sources"
		attributes "Implementation-Version": project.version
		attributes "Maven-Artifact": "${project.group}:${project.archivesBaseName}:${project.version}:sources"
		attributes "Built-On-Minecraft": "${project.minecraft_version}"
		attributes "Built-On-Java": "${System.getProperty("java.vm.version")} (${System.getProperty("java.vm.vendor")})"
	}
}

sourceSets {
	main {
	        java {
	            include 'grondag/**/*'
	            exclude '*.DS_Store'
	        }
	        resources
	        {
	        	include '**/*'
	        	exclude '*.DS_Store'
	        }
	    }
    test {
        java {
            exclude 'grondag/**'
        }
    }
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				classifier = "sources"
				builtBy remapSourcesJar
			}
		}
	}
	
	repositories {
		mavenLocal()
		maven {
            url "https://grondag-repo.appspot.com"
            credentials {
				if (project.hasProperty('maven_user')){
					username = project.getProperty('maven_user')
				}
				if (project.hasProperty('maven_password')){
					password = project.getProperty('maven_password')
				}
			}
        }
	}
}

githubRelease {
	token project.hasProperty("github_releases_token") ? project.github_releases_token : ""
	if(project.hasProperty("github_repository_owner")) {
		owner project.github_repository_owner
	}
	if(project.hasProperty("github_repository")) {
		repo project.github_repository
	}
	
	tagName project.version
	targetCommitish { org.ajoberstar.grgit.Grgit.open(dir: ".").branch.current().name }
	releaseName project.version
	
	FilenameFilter filter = { dir, filename -> filename.contains(project.version) && !filename.contains("-dev.jar") }
	releaseAssets = jar.destinationDir.listFiles filter
}

curseforge {
	if(project.hasProperty("curseforge_api_key")) {
		apiKey = project.properties.curseforge_api_key
	}
	
	if(project.hasProperty("curseforge_id")) {
		project {
			id = project.properties.curseforge_id
			
			releaseType = project.release_type
			addGameVersion project.release_version
			addGameVersion "Fabric"
			
			mainArtifact(remapJar) {
				displayName = "${archives_base_name}-${project.version}.jar"
				
				if(project.hasProperty("required_dep_slugs") || project.hasProperty("embedded_lib_slugs") || project.hasProperty("optional_dep_slugs") || project.hasProperty("compatible_tool_slugs") || project.hasProperty("incompatible_slugs")) {
					relations {
						if(project.hasProperty("required_dep_slugs")) {
							project.required_dep_slugs.split(", ").each { String slug ->
								requiredDependency slug
							}
						}
						
						if(project.hasProperty("embedded_lib_slugs")) {
							project.embedded_lib_slugs.split(", ").each { String slug ->
								embeddedLibrary slug
							}
						}
						
						if(project.hasProperty("optional_dep_slugs")) {
							project.optional_dep_slugs.split(", ").each { String slug ->
								optionalDependency slug
							}
						}
						
						if(project.hasProperty("compatible_tool_slugs")) {
							project.compatible_tool_slugs.split(", ").each { String slug ->
								tool slug
							}
						}
						
						if(project.hasProperty("incompatible_slugs")) {
							project.incompatible_slugs.split(", ").each { String slug ->
								incompatible slug
							}
						}
					}
				}
			}
			
			addArtifact(sourcesJar) {
				displayName = "${archives_base_name}-${minecraft_version}-${project.version}-sources.jar"
			}
			
			afterEvaluate {
				uploadTask.dependsOn remapSourcesJar
			}
		}
		options {
			forgeGradleIntegration = false
		}
	}
}


repositories {
    mavenLocal();
    jcenter();
    //maven { url "https://tehnut.info/maven"}
    //maven { url "http://maven.sargunv.s3-website-us-west-2.amazonaws.com/" }
    //maven { url "https://minecraft.curseforge.com/api/maven" }
    maven { url "https://maven.fabricmc.net/" }
    //maven { url "https://maven.jamieswhiteshirt.com/libs-release/"}
    
 	maven {
    	name = "grondag"
    	url = "https://grondag-repo.appspot.com"
    	credentials {
            username "guest"
            password ""
		}
    }
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings "net.fabricmc:yarn:${yarn_mappings}"
	
	modApi "net.fabricmc:fabric-loader:${loader_version}"
	modApi "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
	
	// dev env annotation support
	compileOnly "org.apiguardian:apiguardian-api:1.0.0"
	compileOnly "com.google.code.findbugs:jsr305:3.0.2"
		
	modImplementation ("grondag:fermion:${project.fermion_version}.+") { transitive = false }
}
